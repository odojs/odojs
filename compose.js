// Generated by CoffeeScript 1.8.0
var VText, create, diff, patch, raf;

create = require('virtual-dom/create-element');

diff = require('virtual-dom/diff');

patch = require('virtual-dom/patch');

VText = require('virtual-dom/vnode/vtext');

raf = require('raf');

module.exports = function(component, state, params, parent) {
  var apply, payload, status, target, tree;
  status = 'init';
  tree = component(state, params);
  target = create(tree);
  status = 'idle';
  apply = function(state, params) {
    var newTree, patches;
    if (status === 'rendering') {
      throw new Error('Mutant rampage');
    }
    status = 'rendering';
    newTree = component(state, params);
    patches = diff(tree, newTree);
    target = patch(target, patches);
    tree = newTree;
    return status = 'idle';
  };
  payload = null;
  return {
    target: target,
    status: status,
    mount: function() {
      return parent.appendChild(target);
    },
    update: function(state, params) {
      if (status === 'rendering') {
        throw new Error('Mutant rampage');
      }
      if (payload === null && status !== 'pending') {
        status = 'pending';
        payload = {
          state: state,
          params: params
        };
        return raf(function() {
          if (payload === null) {
            status = 'idle';
            return;
          }
          apply(payload.state, payload.params);
          return payload = null;
        });
      }
    },
    apply: apply,
    unmount: function() {
      return patch(target, diff(tree, new VText('')));
    }
  };
};
